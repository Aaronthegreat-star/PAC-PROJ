name: Deploying the EKS infrastructure

on: 
  push:
    branches:
        - main

  pull_request:
    branches:
        - main

  workflow_run:
    workflows: ["Build and pushing the Docker Image"]
    types:
      - completed
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  TF_WORKSPACE: ${{ secrets.TF_WORKSPACE }}
  API_TOKEN: ${{ secrets.TF_API_TOKEN }}


jobs:

  configuring-the-cli:
    runs-on: ubuntu-24.04

    steps: 
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS CLI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          # Verify AWS CLI installation
          aws --version
          # The AWS environment variables are being used automatically, no need to echo them.

  provision-eks:
    runs-on: ubuntu-latest
    needs: configuring-the-cli
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest # preferred Terraform version

      - name: Terraform Init
        run: |
         cd Infrastructure
         terraform login 
         terraform init

      - name: Terraform validate and fmt
        run: |
          cd Infrastructure
          terraform validate
          terraform fmt

      - name: Terraform plan
        run: |
          cd Infrastructure
          terraform plan -out=tfplan 


      - name: Terraform Apply
        run: |
          cd Infrastructure
          terraform apply -auto-approve
        continue-on-error: true

      # - name: Terraform Destroy
      #   run: |
      #     cd Infrastructure
      #     terraform destroy -auto-approve
      
      # - name: Upload Terraform State as Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: terraform-state
      #     path: ./terraform-state

  configuring-the-eks-kubeconfig:
    runs-on: ubuntu-latest
    needs: provision-eks
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure kubeconfig
        run: |
          # Ensure the terraform output exists
          EKS_CLUSTER_ID=$(terraform output -raw eks_cluster_id)
          echo "EKS Cluster ID: $EKS_CLUSTER_ID"

          # Update kubeconfig for EKS
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name $EKS_CLUSTER_ID
 
  